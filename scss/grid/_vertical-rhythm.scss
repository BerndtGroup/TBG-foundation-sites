// Foundation for Sites by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

////
/// @group vertical-rhythm
////

/// Outputs a `margin-top` or `padding-top` CSS property for vertical spacing
///
/// @param {Number} $multiplier [1rem] - The number of times to multiply the base increment
/// @param {String} $property ['margin'] - Designates the CSS property to use for spacing: either `margin` or `padding`
/// @param {Number} $increment [1rem] - The base increment to be multiplied
@mixin vertical-rhythm(
  $multiplier,
  $property: 'margin',
  $increment: 1rem,
  $important: false
) {
  @if ($property == 'margin') {
    @if ($important) {
      margin-top: #{$multiplier * $increment} !important;
    }
    @else {
      margin-top: #{$multiplier * $increment};
    }
  }
  @else if ($property == 'padding') {
    @if ($important) {
      padding-top: #{$multiplier * $increment} !important;
    }
    @else {
      padding-top: #{$multiplier * $increment};
    }
  }
}

/// Generates vertical spacing helper classes (and extends) in increments a given number of times
/// Classes have !important to override CSS
///
/// @param {String} $class ['vertical-'] - The base of the class name for each increment
/// @param {Number} $count [12] - The total number of classes (increments) to generate
@mixin vertical-rhythm-classes(
  $class: 'vertical-',
  $count: 12
) {
  @for $i from 0 through $count {
    @if ($i == 1) {
      %#{$class + 'margin-half'} {
        @include vertical-rhythm(0.5);
      }

      .#{$class + 'margin-half'} {
        @include vertical-rhythm(0.5, $important: true);
      }

      %#{$class + 'padding-half'} {
        @include vertical-rhythm(0.5, 'padding');
      }

      .#{$class + 'padding-half'} {
        @include vertical-rhythm(0.5, 'padding', $important: true);
      }
    }

    %#{$class + 'margin-' + $i} {
      @include vertical-rhythm($i);
    }

    .#{$class + 'margin-' + $i} {
      @include vertical-rhythm($i, $important: true);
    }

    %#{$class + 'padding-' + $i} {
      @include vertical-rhythm($i, 'padding');
    }

    .#{$class + 'padding-' + $i} {
      @include vertical-rhythm($i, 'padding', $important: true);
    }
  }

  @include -zf-each-breakpoint(true) {
    @for $i from 0 through $count {
      @if $i == 1 {
        .#{$class + 'margin-half-' + $i + '-' + $-zf-size} {
          @include vertical-rhythm(0.5, $important: true);
        }

        .#{$class + 'padding-half-' + $i + '-' + $-zf-size} {
          @include vertical-rhythm(0.5, 'padding', $important: true);
        }
      }

      .#{$class + 'margin-' + $i + '-' + $-zf-size} {
        @include vertical-rhythm($i, $important: true);
      }

      .#{$class + 'padding-' + $i + '-' + $-zf-size} {
        @include vertical-rhythm($i, 'padding', $important: true);
      }
    }
  }
}

@mixin foundation-vertical-rhythm {
  @include vertical-rhythm-classes();
}
